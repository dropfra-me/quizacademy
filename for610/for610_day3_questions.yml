# FOR610 Training Day 3 Questions
metadata:
  title: "FOR610 Day 3 Practice Questions"
  created_by: "LLM Assistant"
  content_source: "FOR610 Training Materials Day 3"
  question_count: 30

questions:
- category: "Analyzing Malicious Documents and Scripts"
  type: "multiple_choice"
  question: "Which of the following PDF keywords is a strong indicator of a potential phishing attack?"
  options:
  - "/OpenAction"
  - "/JS"
  - "/URI"
  - "/EmbeddedFiles"
  correct_answer: "/URI"
  explanation: "The /URI keyword indicates the presence of clickable URLs, which can be used to lure a victim to a malicious website as part of a phishing attack."
- category: "Analyzing Malicious Documents and Scripts"
  type: "multiple_choice"
  question: "What is the primary advantage of using `pdf-parser.py` over `pdfid.py` for analyzing a potentially malicious PDF?"
  options:
  - "`pdf-parser.py` can automatically decode all obfuscated JavaScript."
  - "`pdf-parser.py` can extract and execute embedded files."
  - "`pdf-parser.py` properly parses the PDF syntax, making its output more accurate."
  - "`pdf-parser.py` is faster for initial triage of a large number of files."
  correct_answer: "`pdf-parser.py` properly parses the PDF syntax, making its output more accurate."
  explanation: "The document explains that because `pdf-parser.py` properly parses the PDF syntax, its output is more accurate, such as correctly counting the number of `/URI` keywords."
- category: "Analyzing Malicious Documents and Scripts"
  type: "multiple_choice"
  question: "A cloud forensics investigator is analyzing a suspicious PDF and sees the keyword `/ObjStm` in the output of `pdfid.py`. What is the next logical step in the investigation?"
  options:
  - "Immediately delete the file as it is confirmed malicious."
  - "Open the file in a web browser to check for embedded scripts."
  - "Analyze the file with `pdf-parser.py` using the `-O` parameter to look inside the object stream."
  - "Attempt to brute-force a password for the object stream."
  correct_answer: "Analyze the file with `pdf-parser.py` using the `-O` parameter to look inside the object stream."
  explanation: "The presence of the `/ObjStm` keyword indicates that the PDF contains an object stream, and `pdfid.py` cannot look inside it. The correct next step is to use `pdf-parser.py` with the `-O` parameter to include objects found in the object stream in the analysis."
- category: "Analyzing Malicious Documents and Scripts"
  type: "multiple_choice"
  question: "When a PDF file is used as a phishing lure with an embedded image, what is the most likely purpose of the image?"
  options:
  - "To trigger an exploit kit without user interaction."
  - "To display a benign, legitimate company logo."
  - "To act as a visual bait, social-engineering the victim into clicking a link."
  - "To automatically launch an external program from the user's system."
  correct_answer: "To act as a visual bait, social-engineering the victim into clicking a link."
  explanation: "The training material describes a scenario where an attacker associates a clickable URL with an embedded image, such as a CAPTCHA challenge, to persuade the victim to click on it and visit a malicious website."
- category: "Analyzing Malicious Documents and Scripts"
  type: "multiple_choice"
  question: "What is the name of the built-in Windows command-line tool that attackers often misuse to execute a downloaded DLL file for persistence?"
  options:
  - "mshta.exe"
  - "cmd.exe"
  - "regsvr32.exe"
  - "powershell.exe"
  correct_answer: "regsvr32.exe"
  explanation: "The material describes how attackers use `regsvr32.exe`, a legitimate Windows tool, to load a DLL and execute a function within it, such as `DllRegisterServer`, as a persistence mechanism."
- category: "Analyzing Malicious Documents and Scripts"
  type: "multiple_choice"
  question: "A malicious Word document contains a PowerShell script that, when deobfuscated, attempts to connect to an external IP address and port to receive commands. This is an example of what type of malicious functionality?"
  options:
  - "A local file dropper."
  - "A rootkit."
  - "A reverse shell or backdoor."
  - "A ransomware payload."
  correct_answer: "A reverse shell or backdoor."
  explanation: "The document details an example where a PowerShell script connects to a remote IP and port, receives data, and sends the output of a child process back to the remote system, which is a reverse shell or backdoor."
- category: "Analyzing Malicious Documents and Scripts"
  type: "multiple_choice"
  question: "Which of the following is a recommended approach for a cloud forensics investigator to safely explore a suspicious website and capture its network activities?"
  options:
  - "Visit the site from their normal, internet-connected workstation."
  - "Use a purposely unpatched lab system with a web proxy like Fiddler or Burp running."
  - "Use a command-line tool like `curl` without spoofing any HTTP headers."
  - "Use the `Thug` honeyclient tool, which is not available on REMnux."
  correct_answer: "Use a purposely unpatched lab system with a web proxy like Fiddler or Burp running."
  explanation: "The course recommends visiting a suspicious site from a purposefully vulnerable lab system to 'encourage' it to attack, while capturing network activities with tools like Fiddler or Burp."
- category: "Analyzing Malicious Documents and Scripts"
  type: "multiple_choice"
  question: "What is the primary function of the `URLDownloadToFile` API call often seen in malicious VBA macros?"
  options:
  - "To launch an embedded executable on the victim's system."
  - "To download a file from a URL and save it to the local disk."
  - "To establish a network connection to a C2 server."
  - "To collect and exfiltrate sensitive data from the system."
  correct_answer: "To download a file from a URL and save it to the local disk."
  explanation: "The course material explains that `URLDownloadToFile` is a Windows API used by malicious macros to download a file from a URL and save it locally on the system."
- category: "Analyzing Malicious Documents and Scripts"
  type: "multiple_choice"
  question: "In the analysis of a malicious RTF file, what is indicated by the presence of a magic number `d0cf11e0`?"
  options:
  - "The RTF file is password-protected."
  - "The file contains a JavaScript exploit."
  - "The file has an OLE2 file embedded within it."
  - "The file is a RAR self-extracting archive."
  correct_answer: "The file has an OLE2 file embedded within it."
  explanation: "The document states that the magic number `d0cf11e0` represents the beginning of an OLE2 file, indicating that an OLE2 object is embedded in the RTF file."
- category: "Analyzing Malicious Documents and Scripts"
  type: "multiple_choice"
  question: "What is the purpose of the `evilclippy` tool?"
  options:
  - "To automatically deobfuscate all VBA macros in a document."
  - "To simulate a malicious macro's execution in a sandbox."
  - "To remove password protection from a VBA project."
  - "To dump the contents of a password-protected PDF."
  correct_answer: "To remove password protection from a VBA project."
  explanation: "The document states that `evilclippy` can be run with the `-uu` parameter to remove VBA project password protection from a file, enabling an analyst to examine the macros with Microsoft Office."
- category: "Analyzing Malicious Documents and Scripts"
  type: "multiple_choice"
  question: "In the analysis of the `mydoc.docm` sample, what tool was used to automatically deobfuscate the PowerShell script within the macro?"
  options:
  - "oledump.py"
  - "sed"
  - "numbers-to-string.py"
  - "ViperMonkey"
  correct_answer: "numbers-to-string.py"
  explanation: "The material describes how `numbers-to-string.py` was used to convert the character codes in the VBA macro into a legible string, which revealed the `powershell.exe` command."
- category: "Analyzing Malicious Documents and Scripts"
  type: "multiple_choice"
  question: "When analyzing a malicious Word document, what is the significance of the `AutoOpen` function in a VBA macro?"
  options:
  - "It indicates a function that must be manually executed by the user."
  - "It defines a function that automatically runs when the document is opened and macros are enabled."
  - "It is a function used to deobfuscate strings within the macro."
  - "It is an artifact of a benign, legitimate macro."
  correct_answer: "It defines a function that automatically runs when the document is opened and macros are enabled."
  explanation: "The course material explains that `AutoOpen` is a function that Microsoft Word will automatically execute if the user opens the document and allows macros to run."
- category: "Analyzing Malicious Documents and Scripts"
  type: "multiple_choice"
  question: "What is a primary risk associated with a malicious macro using a 'LOLBIN' like `regsvr32.exe`?"
  options:
  - "The macro will crash the system immediately upon execution."
  - "The use of a legitimate, trusted application can bypass security defenses."
  - "The LOLBIN will automatically encrypt the user's files."
  - "The macro is easily detected by most security tools."
  correct_answer: "The use of a legitimate, trusted application can bypass security defenses."
  explanation: "The document explains that `regsvr32.exe` is a legitimate, built-in Windows tool, which attackers misuse to execute malicious code, allowing them to evade security controls that trust the application."
- category: "Analyzing Malicious Documents and Scripts"
  type: "multiple_choice"
  question: "When analyzing a PDF file, what is the role of an indirect object with a unique identifier?"
  options:
  - "It contains the file's header information."
  - "It stores the file's cross-reference table."
  - "It can be referenced by other objects in the PDF."
  - "It always contains encrypted JavaScript."
  correct_answer: "It can be referenced by other objects in the PDF."
  explanation: "PDF specifications use the term 'indirect object' to refer to objects with a unique identifier that can be referenced by other objects."
- category: "Analyzing Malicious Documents and Scripts"
  type: "multiple_choice"
  question: "What does the `\objdata` control word in an RTF document indicate?"
  options:
  - "The start of a VBA macro."
  - "The beginning of a serialized string of hexadecimal characters representing an embedded object."
  - "The document's file version number."
  - "The end of an obfuscated PowerShell script."
  correct_answer: "The beginning of a serialized string of hexadecimal characters representing an embedded object."
  explanation: "The `\objdata` control word is used to mark the beginning of a serialized string of hexadecimal characters that represents the data of an embedded object."
- category: "Analyzing Malicious Documents and Scripts"
  type: "true_false"
  question: "The `pdfid.py` tool is designed to properly parse PDF syntax, which makes it more precise than `pdf-parser.py`."
  correct_answer: false
  explanation: "The material states that `pdf-parser.py` is the more sophisticated parsing tool and is more precise in its analysis than `pdfid.py`."
- category: "Analyzing Malicious Documents and Scripts"
  type: "true_false"
  question: "A malicious VBA macro is always contained within a single stream in an OLE2 file."
  correct_answer: false
  explanation: "The document notes that macros can be split across multiple streams in an OLE2 file."
- category: "Analyzing Malicious Documents and Scripts"
  type: "true_false"
  question: "A PDF file with a second page containing a large amount of text in a small font is likely designed to confuse anti-malware tools to evade detection."
  correct_answer: true
  explanation: "The training material suggests that the second page with lots of text in a small font is likely designed to confuse anti-malware and anti-spam tools."
- category: "Analyzing Malicious Documents and Scripts"
  type: "true_false"
  question: "The `vmonkey` tool is used to statically analyze VBA macros by emulating their execution."
  correct_answer: true
  explanation: "The document describes `vmonkey` as a tool that emulates the macro to generate a table containing the auto-decoded contents."
- category: "Analyzing Malicious Documents and Scripts"
  type: "true_false"
  question: "When using a web proxy like Fiddler, an analyst can only see HTTP traffic, not encrypted HTTPS traffic."
  correct_answer: false
  explanation: "The material states that Fiddler can log both HTTP and HTTPS sessions."
- category: "Analyzing Malicious Documents and Scripts"
  type: "true_false"
  question: "The `Shell` command in a VBA macro is typically used to launch an external program."
  correct_answer: true
  explanation: "In the analysis of the `mydoc.docm` sample, the `Shell` command was used to execute the contents of the `exec` variable, which contained a PowerShell command."
- category: "Analyzing Malicious Documents and Scripts"
  type: "true_false"
  question: "The `ViperMonkey` tool will always successfully deobfuscate malicious VBA macros, so manual analysis is rarely necessary."
  correct_answer: false
  explanation: "The course material warns that `ViperMonkey` doesn't always work, which is why an analyst must know how to perform manual analysis."
- category: "Analyzing Malicious Documents and Scripts"
  type: "true_false"
  question: "The `ChrW` function in VBA is used to convert a character code into a string."
  correct_answer: true
  explanation: "The document explains that `ChrW` converts a specified character code into a string."
- category: "Analyzing Malicious Documents and Scripts"
  type: "true_false"
  question: "The `export PDFPARSER_OPTIONS=-O` command permanently configures `pdf-parser.py` to always look inside object streams."
  correct_answer: false
  explanation: "This command sets an environment variable, but the effect is only for the current shell session, not a permanent configuration."
- category: "Analyzing Malicious Documents and Scripts"
  type: "true_false"
  question: "The `runsc32` tool is used to examine the format of a file and determine if it is a self-extracting archive."
  correct_answer: false
  explanation: "`runsc32` is used to run shellcode, while the `file` command is used to determine the format of a file."
- category: "Analyzing Malicious Documents and Scripts"
  type: "true_false"
  question: "RTF files do not support macros but can still be malicious by embedding other dangerous files as objects."
  correct_answer: true
  explanation: "The document states that the RTF format does not support macros but does allow for embedding arbitrary files as OLE1 objects."
- category: "Analyzing Malicious Documents and Scripts"
  type: "true_false"
  question: "Shellcode needs to invoke standard Windows API calls, often looking for `kernel32.dll` to assist with this task."
  correct_answer: true
  explanation: "The material states that shellcode often needs to find `kernel32.dll` in memory to invoke standard Windows API calls and load other DLLs."
- category: "Analyzing Malicious Documents and Scripts"
  type: "true_false"
  question: "The `numbers-to-string.py` tool must be manually configured to support different character code formats, such as decimal or hexadecimal."
  correct_answer: false
  explanation: "The example shows `numbers-to-string.py` being used to convert decimal character codes to a string without any special configuration."
- category: "Analyzing Malicious Documents and Scripts"
  type: "true_false"
  question: "In the context of the `checkbox.doc` analysis, `Cobalt Strike` is a well-known, legitimate antivirus product."
  correct_answer: false
  explanation: "The training material identifies `Cobalt Strike` as a 'legitimate penetration testing tool that's frequently misused by malicious attackers' to establish backdoors."
- category: "Analyzing Malicious Documents and Scripts"
  type: "true_false"
  question: "When a VBA project is password-protected, you can still extract the macros using an external tool like `oledump.py`."
  correct_answer: true
  explanation: "The material states that even when a VBA project is password-protected, the macros can still be extracted using an external tool such as `oledump.py` because the protection is not encryption."
